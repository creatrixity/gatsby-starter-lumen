{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/pt-7-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/","result":{"data":{"markdownRemark":{"id":"20d47c2b-4759-5c71-a3d8-300e7df19a94","html":"<p><img src=\"https://cdn.steemitimages.com/DQmeF6BDrvHbNQCYFP17nYGdCtp7d9oWra6g1oxbiZnyAJm/AuthorCard-completed.gif\" alt=\"Complete Author Card\"></p>\n<h4 id=\"repository\" style=\"position:relative;\"><a href=\"#repository\" aria-label=\"repository permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repository</h4>\n<p><a href=\"https://github.com/facebook/react\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ReactJS</a></p>\n<h4 id=\"tutorial-repo\" style=\"position:relative;\"><a href=\"#tutorial-repo\" aria-label=\"tutorial repo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tutorial Repo</h4>\n<p><a href=\"https://github.com/creatrixity/fire-liners\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FireLiners </a></p>\n<h4 id=\"what-will-i-learn\" style=\"position:relative;\"><a href=\"#what-will-i-learn\" aria-label=\"what will i learn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What Will I Learn?</h4>\n<p>You will learn how to build a feature that progressively displays author information upon interaction. In the course of building this feature, we will learn about and use these techniques below to achieve our goal.</p>\n<ul>\n<li>Component composition of Priceline Design System components</li>\n<li>Stream rate limiting using <code class=\"language-text\">debounce</code> and <code class=\"language-text\">lodash</code>.</li>\n<li>Using cache memoization to avoid memory leaks and improve performance.</li>\n<li>Progressive reveal techniques and optimizations for React apps.</li>\n</ul>\n<h4 id=\"difficulty\" style=\"position:relative;\"><a href=\"#difficulty\" aria-label=\"difficulty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Difficulty</h4>\n<ul>\n<li>Advanced</li>\n</ul>\n<h4 id=\"requirements\" style=\"position:relative;\"><a href=\"#requirements\" aria-label=\"requirements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements</h4>\n<ul>\n<li><a href=\"https://nodejs.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a> 8.0 or greater.</li>\n<li><a href=\"https://npmjs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a> 3.0 or greater.</li>\n<li><a href=\"https://yarnpkg.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Yarn</a> package manager</li>\n<li><a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Git</a></li>\n<li><a href=\"https://github.com/creatrixity/fire-liners\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FireLiners Github Repository Code</a></li>\n<li>An intermediate level of <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ReactJS</a> knowledge.</li>\n<li>Keen interest and patience.</li>\n</ul>\n<h4 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction.</h4>\n<p>Performance can be what makes the difference between a good app and a great one. In production settings the aphorism, “to lag is to lose users” usually holds true. Fluid and swift apps can be achieved by avoiding or minimizing resource intensive operations.</p>\n<p>In certain use cases, we have to handle a stream (or flood, as the case may be) of events that need to be handled in some way and improper handling of these events may cause some lags in our application.</p>\n<p>Performance aside, having a great user interface that is simple and intuitive is a big plus for users of our apps and while the Priceline Design System does a great job at providing simple components to get us started building user interfaces, we may have our own use cases that are just not covered by it. When this happens, we need to create our own components. As smart developers, we understand that composition is better than creation, and we are better off <em>extending</em> a preexisting component rather than creating a new one so we’ll simply create new components that inherit from previously created components.</p>\n<p>With all said, last time we explored skeletal content placeholder screens as a technique for improving perceived app response times and action notifications as an effective feedback mechanism. This time, we’ll examine more performance techniques. We’ll learn about concepts such as cache memoization, request rate limiting and component composition off vendor components.</p>\n<p><strong>Disclaimer:</strong></p>\n<p>This tutorial may be pretty challenging for a first time reader of this series. I sincerely recommend that visitors get at least a cursory gaze at the previous articles in this series for easier comprehension. Links to the previous articles are available at the bottom of the this tutorial.</p>\n<h4 id=\"briefing\" style=\"position:relative;\"><a href=\"#briefing\" aria-label=\"briefing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Briefing.</h4>\n<p>In the overview above, we briefly described our problem space and we also clearly outlined the techniques we hope to use to address said problems. Let’s address the first technique.</p>\n<h4 id=\"progressive-reveal-techniques-in-user-interfaces\" style=\"position:relative;\"><a href=\"#progressive-reveal-techniques-in-user-interfaces\" aria-label=\"progressive reveal techniques in user interfaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Progressive Reveal Techniques in User Interfaces.</h4>\n<p><strong>What is Progressive Revealing?</strong></p>\n<p>Progressive revealing is a user experience design technique that stresses the importance of only absolutely essential elements being displayed to the user. Any content or elements deemed to be of a lower priority nature are not visible to the user until a required interaction has occurred.</p>\n<p>There exist multiple examples of progressive revealing as a pattern in most mainstream production apps as it <a href=\"https://www.nngroup.com/articles/minimize-cognitive-load/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">helps to reduce the cognitive load on the user</a>. The most common interactions that are leveraged for progressive revealing are the mouse over, key press, tap/click and scrolling interactions.</p>\n<p><strong>Why are optimizations necessary for progressive revealing?</strong></p>\n<p>Optimizations are of the essence when carrying out progressive revealing because we all want a smoother experience. Jaunty animations and layouts distorting due to elements being revealed are best avoided as these can mar something beautiful.</p>\n<h4 id=\"adding-author-cards-to-our-fireliners-app\" style=\"position:relative;\"><a href=\"#adding-author-cards-to-our-fireliners-app\" aria-label=\"adding author cards to our fireliners app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding Author Cards to Our FireLiners app.</h4>\n<p>Today, we’ll be adding a new feature to our app. In the course of adding this feature, we will use every single technique we are to learn in this tutorial. The feature we’ll be adding displays additional information about an author when a user mouses over the author’s avatar.</p>\n<p>We’ll do a recap of our structure. As you can see below, we have a really extensive structure for our app.</p>\n<ul>\n<li>\n<p><strong>fire-liners/</strong></p>\n<ul>\n<li>config/…</li>\n<li>node_modules/…</li>\n<li>public/…</li>\n<li>scripts/…</li>\n<li><strong>src/</strong></li>\n<li>\n<p>assets/</p>\n<ul>\n<li>data/</li>\n<li>authors.json</li>\n<li>liners.json</li>\n<li>img/…</li>\n</ul>\n</li>\n<li>\n<p>components/</p>\n<ul>\n<li>Header/</li>\n<li>index.js</li>\n<li>Feed/</li>\n<li>index.js</li>\n<li>Form/</li>\n<li>index.js</li>\n<li>Transitions/</li>\n<li>index.js</li>\n</ul>\n</li>\n<li>\n<p>containers/</p>\n<ul>\n<li>App/</li>\n<li>App.test.js</li>\n<li>index.js</li>\n<li>constants.js</li>\n<li>reducer.js</li>\n<li>saga.js</li>\n</ul>\n</li>\n<li>\n<p>redux/</p>\n<ul>\n<li>reducerInjector.js</li>\n<li>reducers.js</li>\n<li>sagas.js</li>\n<li>store.js</li>\n</ul>\n</li>\n<li>\n<p>screens/</p>\n<ul>\n<li>AddLine /</li>\n<li>index.js</li>\n<li>actions.js</li>\n<li>Author/</li>\n<li>index.js</li>\n<li>constants.js</li>\n<li>actions.js</li>\n<li>saga.js</li>\n<li>reducer.js</li>\n<li>Home /</li>\n<li>index.js</li>\n<li>constants.js</li>\n<li>actions.js</li>\n<li>saga.js</li>\n<li>reducer.js</li>\n<li>Loading /</li>\n<li>index.js</li>\n</ul>\n</li>\n<li>\n<p>services/</p>\n<ul>\n<li>DataService/</li>\n<li>index.js</li>\n</ul>\n</li>\n<li>index.js</li>\n<li>registerServiceWorker.js</li>\n<li>package.json</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"setting-the-stage\" style=\"position:relative;\"><a href=\"#setting-the-stage\" aria-label=\"setting the stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting the Stage.</h4>\n<p>We’ll need to carry out these steps to get our author cards displaying:</p>\n<ol>\n<li>Design the card component for displaying author information and then create the <code class=\"language-text\">&lt;AuthorCard/></code> component. This is hidden by default pending interaction.</li>\n<li>Listen for an interaction by our user and then display or hide the <code class=\"language-text\">&lt;AuthorCard/></code> as the case may be.</li>\n</ol>\n<p>While these are seemingly easy steps, we have to keep performance at the forefront of our priorities. We will proceed with our first task.</p>\n<h4 id=\"designing-and-building-the-authorcard-component\" style=\"position:relative;\"><a href=\"#designing-and-building-the-authorcard-component\" aria-label=\"designing and building the authorcard component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Designing and Building the <code class=\"language-text\">&lt;AuthorCard/></code> component.</h4>\n<p>Our <code class=\"language-text\">AuthorCard</code> component has three primary aims:</p>\n<ol>\n<li>Display the government names of our authors. This is an extraneous detail, and it is better suited to being progressively revealed to avoid clutter.</li>\n<li>Display a much more prominent call to action button that allows our users see all liners belonging to an author.</li>\n<li>Collate and display the total number of liners belonging to each author.</li>\n</ol>\n<p>With this in mind, we proceed to creating our <code class=\"language-text\">AuthorCard</code> component. Let’s create a directory called <code class=\"language-text\">AuthorCard</code> at <code class=\"language-text\">src/components</code>. We’ll be adding all styled components that have to do with our <code class=\"language-text\">AuthorCard</code> here. We’ll then create an <code class=\"language-text\">index.js</code> file at the newly created directory and get straight to work.</p>\n<p>We start off by importing styled-component’s <code class=\"language-text\">styled</code> function that allows us to extend or build off another styled component (in this case, the <code class=\"language-text\">Card</code> component which we also import).</p>\n<p><img src=\"https://cdn.steemitimages.com/DQmdMjxhvt246t3WktT43WXD6SuzBGWZxYPY75wH6RgFuSj/AuthorCard-Styled-Components.png\" alt=\"AuthorCard styled component\"></p>\n<p>Next, we add some light CSS within the tagged template literal of the <code class=\"language-text\">AuthorCard</code> constant. We are simply doing some absolute positioning here to make sure it is some distance away from the avatar and then we make it wide. It’s interesting to see that we have less CSS to write thanks to styled component composition as we simply inherit from the <code class=\"language-text\">&lt;Card/></code> component.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Card <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"pcln-design-system\"</span>\n\n<span class=\"token keyword\">const</span> AuthorCard <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>Card<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  position: absolute;\n  width: 220px;\n  top: 60px;\n  left: -105px;\n  z-index: 500;\n  border-radius: 5px;\n</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AuthorCard</code></pre></div>\n<p>Great, let’s see if we’re ready to use it. We’ll use it within the <code class=\"language-text\">Feed</code> component. At the moment our <code class=\"language-text\">Feed</code> component is a monolithic mess. Let’s break it down into a series of smaller components. Our <code class=\"language-text\">Feed</code> component is now much more easy to understand as we simply define a new component <code class=\"language-text\">FeedItem</code>. We’ll pass the <code class=\"language-text\">index</code>, <code class=\"language-text\">liner</code> and other provided variables as props.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Feed</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> props<span class=\"token punctuation\">.</span>liners<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n    props<span class=\"token punctuation\">.</span>liners\n      <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">liner<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>FeedItem key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span> liner<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>liner<span class=\"token punctuation\">}</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Nothing found<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We also define some prop types for our <code class=\"language-text\">Feed</code> component. The props accepted by our <code class=\"language-text\">Feed</code> component:</p>\n<ul>\n<li><code class=\"language-text\">liners</code>: This is the array of liners to be displayed.</li>\n<li><code class=\"language-text\">linersSetIndex</code>: The index of the liner set.</li>\n<li><code class=\"language-text\">authors</code>: The authors of the quotes.</li>\n<li><code class=\"language-text\">isLoading</code>: Tracks the state of the data.</li>\n<li><code class=\"language-text\">onAuthorMouseOver</code>: A handler method that handles the mouse over event on the <code class=\"language-text\">AuthorCard</code>.</li>\n<li><code class=\"language-text\">onAuthorMouseLeave</code>: A handler method that handles the mouse leave event on the <code class=\"language-text\">AuthorCard</code>.</li>\n</ul>\n<p>We also set some default values.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Feed<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  liners<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span>\n  linersSetIndex<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n  authors<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span>\n  isLoading<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>bool<span class=\"token punctuation\">,</span>\n  onAuthorMouseOver<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span>\n  onAuthorMouseLeave<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nFeed<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  liners<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  linersSetIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  authors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  isLoading<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onAuthorMouseOver</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onAuthorMouseLeave</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We also define the <code class=\"language-text\">FeedItem</code> component. It’s also really small as the bulk of its code is contained within the <code class=\"language-text\">FeedItemContent</code> and <code class=\"language-text\">FeedItemAvatar</code> components.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FeedItem</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Box<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Flex\n      bg<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>index <span class=\"token operator\">===</span> props<span class=\"token punctuation\">.</span>linersSetIndex <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"lightBlue\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"lightGray\"</span><span class=\"token punctuation\">}</span>\n      style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> borderRadius<span class=\"token operator\">:</span> <span class=\"token string\">\"4px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      p<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n      mb<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>FeedItemAvatar <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>FeedItemContent <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Box<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Within our <code class=\"language-text\">FeedItemAvatar</code>, we’ll simply be displaying our avatar as previously seen on this series but we are making two changes: we are adding event handlers to the <code class=\"language-text\">Circle</code> component. We have:</p>\n<ol>\n<li><code class=\"language-text\">onMouseOver</code>: Here we check for users hovering their cursors over our avatar. Within the handler’s method, we call <code class=\"language-text\">props.onAuthorMouseOver</code> passing it the <code class=\"language-text\">props.index</code>. This <code class=\"language-text\">props.onAuthorMouseOver</code> method is supplied by a parent component.</li>\n</ol>\n<p><em>The reason this method must be supplied by a parent component is simple: our <code class=\"language-text\">Feed</code> component is dumb (or stateless, if your prefer) and it can only work with any methods or values supplied to it from another component.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FeedItemAvatar</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Flex style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> position<span class=\"token operator\">:</span> <span class=\"token string\">\"relative\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Circle\n      bg<span class=\"token operator\">=</span><span class=\"token string\">\"#d5d5d5\"</span>\n      mr<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\n      flexDirection<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span>\n      justify<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span>\n      onMouseOver<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span><span class=\"token function\">onAuthorMouseOver</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      onMouseLeave<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span><span class=\"token function\">onAuthorMouseLeave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>isLoading <span class=\"token operator\">&amp;&amp;</span>\n        props<span class=\"token punctuation\">.</span>liners<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> props<span class=\"token punctuation\">.</span>index <span class=\"token operator\">&amp;&amp;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token function\">getLinerAuthor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>liner<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>authors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>photo <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>Image\n            src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">../../assets/img/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n              <span class=\"token function\">getLinerAuthor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>liner<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>authors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>photo\n            <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> borderRadius<span class=\"token operator\">:</span> <span class=\"token string\">\"50%\"</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token string\">\"60px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Circle<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Last of all, we finish refactoring by defining the <code class=\"language-text\">FeedItemContent</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FeedItemContent</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Flex flexDirection<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span> width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text mb<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span> width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span> italic fontSize<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>isLoading <span class=\"token operator\">&amp;&amp;</span> props<span class=\"token punctuation\">.</span>liners<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> props<span class=\"token punctuation\">.</span>index <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n        props<span class=\"token punctuation\">.</span>liner<span class=\"token punctuation\">.</span>body\n      <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>Skeleton count<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>isLoading <span class=\"token operator\">&amp;&amp;</span> props<span class=\"token punctuation\">.</span>liners<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> props<span class=\"token punctuation\">.</span>index <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Link\n        href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/authors/\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getLinerAuthor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>liner<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>authors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text fontSize<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span> mb<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"gray\"</span> align<span class=\"token operator\">=</span><span class=\"token string\">\"right\"</span> bold<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>liner<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Flex flexDirection<span class=\"token operator\">=</span><span class=\"token string\">\"row-reverse\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Skeleton width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">100</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Great! Instead of one giant component, we have three smaller components. Proceeding with our <code class=\"language-text\">AuthorCard</code> component, we’ll use it within the <code class=\"language-text\">&lt;FeedItemAvatar/></code> component.</p>\n<p>We try to make sure our <code class=\"language-text\">AuthorCard</code> is only visible when we hover over the corresponding author. Now, we have to be subtle about this or we could risk displaying multiple author cards instead of just one. We make sure we are looking at the right author card by making sure that two values are equal:</p>\n<ol>\n<li><code class=\"language-text\">props.activeAuthorCard</code>: This contains the index of the current item we are moving our mouse over. It must be passed from the parent.</li>\n<li><code class=\"language-text\">props.index</code>: This is the index of the current item in the iteration.</li>\n</ol>\n<p>All we are saying is, “If the current item being iterated on is the one we’ve got our mouse over, please show it.”.</p>\n<p>Next, we’d like a bit of shadow to simulate depth so we set <code class=\"language-text\">boxShadowSize</code> to <code class=\"language-text\">lg</code>. We also set up the same handlers for the author card as previously seen. This is to make sure our card does not get hidden when we move our mouse off the authors photo and on to the card.</p>\n<p>Next, within the <code class=\"language-text\">AuthorCard</code>, we start fleshing out some content. We display the author’s name alongside his/her government name. We then display the author’s liners count to the right with the call to action centrally displayed.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> AuthorCard <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../components/AuthorCard\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FeedItemAvatar</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Flex style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> position<span class=\"token operator\">:</span> <span class=\"token string\">\"relative\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Previous code exists here */</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>AuthorCard\n      style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        opacity<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>activeAuthorCard <span class=\"token operator\">===</span> props<span class=\"token punctuation\">.</span>index <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      boxShadowSize<span class=\"token operator\">=</span><span class=\"token string\">\"lg\"</span>\n      onMouseOver<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span><span class=\"token function\">onAuthorMouseOver</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      onMouseLeave<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span><span class=\"token function\">onAuthorMouseLeave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      px<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n      py<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n      bg<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Flex mb<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Flex style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flex<span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> flexDirection<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Text bold fontSize<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>liner<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Text fontSize<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"gray\"</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span><span class=\"token function\">getLinerAuthor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>liner<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>authors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>government_name<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Flex flexDirection<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Text color<span class=\"token operator\">=</span><span class=\"token string\">\"darkGray\"</span> fontSize<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token number\">32</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Flex flexDirection<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span> align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>OutlineButton size<span class=\"token operator\">=</span><span class=\"token string\">\"small\"</span> py<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> px<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token operator\">:</span> <span class=\"token string\">\"35px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Text fontSize<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>All <span class=\"token number\">32</span> quotes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>OutlineButton<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AuthorCard<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>We’ll now need to head back to our Home screen at <code class=\"language-text\">src/screens/Home/index.js</code> and rewrite it a little.</p>\n<p><img src=\"https://cdn.steemitimages.com/DQmU5oH5j9ihkiPMyMqxApiZPs1bRiBb7sytbnxE8YbHP8D/HomeStateObject.png\" alt=\"Home State Object\"></p>\n<p>First of all, we need to find a way to keep the index of the author card of interest for the short term. The <code class=\"language-text\">Home</code> component’s state is perfect for this job. We’ll define the <code class=\"language-text\">activeAuthorCard</code> state property and set it to null by default.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Home</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Previous code here</span>\n      activeAuthorCard<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We also update our <code class=\"language-text\">&lt;Feed/></code> component call to reflect the recent changes made. We set the <code class=\"language-text\">activeAuthorCard</code> prop to <code class=\"language-text\">this.state.activeAuthorCard</code>. We also call <code class=\"language-text\">this.setActiveAuthorCard</code> within the <code class=\"language-text\">onAuthorMouseOver</code> handler method passing the received <code class=\"language-text\">index</code> value as an argument. We also do the same in the <code class=\"language-text\">onAuthorMouseLeave</code> handler but we pass <code class=\"language-text\">null</code> this time as we want to revert back to default state when we move the mouse away.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Feed\n  liners<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>liners<span class=\"token punctuation\">}</span>\n  linersSetIndex<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>linersSetIndex<span class=\"token punctuation\">}</span>\n  authors<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>authors<span class=\"token punctuation\">}</span>\n  isLoading<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoadingLiners<span class=\"token punctuation\">}</span>\n  activeAuthorCard<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>activeAuthorCard<span class=\"token punctuation\">}</span>\n  onAuthorMouseOver<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">index</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setActiveAuthorCard</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  onAuthorMouseLeave<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">index</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setActiveAuthorCard</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>We’ll define the <code class=\"language-text\">setActiveAuthorCard</code> method next. It is a one-liner method that simply sets the value of the <code class=\"language-text\">state.activeAuthorCard</code> value.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">setActiveAuthorCard</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">index</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    activeAuthorCard<span class=\"token operator\">:</span> index<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>We’ll fire up our server with <code class=\"language-text\">npm start</code> and have a look at the result below.</p>\n<p><img src=\"https://cdn.steemitimages.com/DQmdj4m89AVvxK88MPGQYUM9i1QaWZbgmkva2qmHHqzohQK/AuthorCard-flickering.gif\" alt=\"GIF of AuthorCard Revealing But Flickering\"></p>\n<p>Our author card shows up as expected, but multiple mouseover events causes it to flicker. This could create a really frustrating user experience for our users so we need to find a solution. If only there is a way to only show the card once and ignore other events that are fired at least for some time. Turns out there is a way. That way is <strong><code class=\"language-text\">debounce</code></strong>.</p>\n<p><strong>What is <code class=\"language-text\">debounce</code>?</strong></p>\n<p>Debounce is a technique with which we delay the invocation of a function until after a period of time (expressed in milliseconds) have elapsed since the last time the debounced function was invoked.</p>\n<p>Thanks to <code class=\"language-text\">lodash</code>, the utility library, we can use the <code class=\"language-text\">debounce</code> function to solve our problem. The best part of all these, to me, is the fact that you don’t need to <code class=\"language-text\">npm install lodash</code> as it is a React dependency itself.</p>\n<p>We will make sure we call a <em>debounced</em> function every time we move our mouse to prevent flickering. We will also use cache memoization (which is the assignment of a memory instance that could be created multiple to a memory address to speed up performance)</p>\n<p>To get started, we import the <code class=\"language-text\">debounce</code> function from <code class=\"language-text\">lodash</code>. Next up, we will make sure any time the <code class=\"language-text\">this.setActiveAuthorCard</code> method is called, only the “debounced” version of this method is called, we will make sure this method can only be called once in 200 milliseconds so we supply <code class=\"language-text\">200</code> as the second argument to the <code class=\"language-text\">debounce</code> function.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> debounce <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Home</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// previous code...</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setActiveAuthorCard <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setActiveAuthorCard<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We save and we head back to the browser. Great! As you can see below, there is no flickering even when we have multiple mouse over events which is pretty awesome.</p>\n<p><img src=\"https://cdn.steemitimages.com/DQmdAsa98c3zCxVygDvhNijkQoaqp2AvaGVEBWZoXLevEQ9/AuthorCard-stable.gif\" alt=\"AuthorCard stable\"></p>\n<p>While everything works as expected, the motion of the Author Card is a little to abrupt and not natural at all. We can leverage the power of CSS-in-JS to make it a little more fluid.</p>\n<p>We’ll edit the <code class=\"language-text\">AuthorCard</code> component CSS and add a transition for the opacity and transform CSS properties that we’ll use to make our Author Card appear gracefully.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> AuthorCard <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>Card<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  position: absolute;\n  width: 220px;\n  top: 60px;\n  left: -105px;\n  z-index: 500;\n  border-radius: 5px;\n  transition: opacity 0.5s ease, transform 0.3s ease-in-out;\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>We’ll now proceed to carry out a transform depending on whether the card is visible or not. If it is not visible, we’ll keep it 30 pixels away from the top, if it is visible, we’ll bring it back to the top with a pleasant fading-translating transition.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>AuthorCard\n   style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n      opacity<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>activeAuthorCard <span class=\"token operator\">===</span> props<span class=\"token punctuation\">.</span>index <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n       transform<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>activeAuthorCard <span class=\"token operator\">===</span> props<span class=\"token punctuation\">.</span>index <span class=\"token operator\">?</span> <span class=\"token string\">'translateY(0)'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'translateY(30px)'</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* other code here */</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AuthorCard<span class=\"token operator\">></span></code></pre></div>\n<p>Ain’t that sweet? It’s looking real pretty. We just need to do one thing and that is add a little wedge pointing to the authors photo. We’ll create a component called <code class=\"language-text\">AuthorCardArrow</code> at <code class=\"language-text\">src/components/AuthorCard/AuthorCardArrow.js</code> and get to work.</p>\n<p>We are extending the <code class=\"language-text\">Box</code> Priceline component (just displays a div) and then we’re using some absolute positioning and CSS triangle techniques to generate the white wedge.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Box <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"pcln-design-system\"</span>\n\n<span class=\"token keyword\">const</span> AuthorCardArrow <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>Box<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  position: absolute;\n  top: -10px;\n  left: 105px;\n  width: 0;\n  height: 0;\n  border-left: 15px solid transparent;\n  border-right: 15px solid transparent;\n\n  border-bottom: 15px solid white;\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AuthorCardArrow</code></pre></div>\n<p>Next, we head over to <code class=\"language-text\">src/Components/Feed</code> and add it to the <code class=\"language-text\">AuthorCard</code> component instantiation.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> AuthorCardArrow <span class=\"token keyword\">from</span> <span class=\"token string\">'../../components/AuthorCard/AuthorCardArrow'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token operator\">&lt;</span>AuthorCard\n            <span class=\"token punctuation\">{</span><span class=\"token comment\">/* props here */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>AuthorCardArrow<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* other code here */</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AuthorCard<span class=\"token operator\">></span></code></pre></div>\n<p>After our hard work, we get this cool author card.</p>\n<p><img src=\"https://cdn.steemitimages.com/DQmeF6BDrvHbNQCYFP17nYGdCtp7d9oWra6g1oxbiZnyAJm/AuthorCard-completed.gif\" alt=\"Complete Author Card\"></p>\n<h4 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h4>\n<p>In this tutorial, we covered multiple concepts. We learned more about the importance of performance for our applications. We also added progressive revealing features to the FireLiners application. We used the <code class=\"language-text\">debounce</code> function from <code class=\"language-text\">lodash</code> to successfully rate-limit event handler invocations.</p>\n<p>In our next tutorial, we’ll explore more advanced performance techniques. We’ll look at interactive lazy-loading as a means of increasing perceived application responsiveness. We’ll also look at techniques for searching through fire liners easily.</p>\n<h4 id=\"curriculum\" style=\"position:relative;\"><a href=\"#curriculum\" aria-label=\"curriculum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Curriculum</h4>\n<ul>\n<li><a href=\"https://www.kaymathew.com/posts/pt-1-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Part One: Build a CSS-in-JS App With Styled Components and Priceline Design System</a></li>\n<li><a href=\"https://www.kaymathew.com/posts/pt-2-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Part Two: Build a CSS-in-JS App With Styled Components and Priceline Design System</a></li>\n<li><a href=\"https://www.kaymathew.com/posts/pt-3-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Part Three: Build a CSS-in-JS App With Styled Components and Priceline Design System</a></li>\n<li><a href=\"https://www.kaymathew.com/posts/pt-4-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Part Four: Build a CSS-in-JS App With Styled Components and Priceline Design System</a></li>\n<li><a href=\"https://www.kaymathew.com/posts/pt-5-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Part Five: Build a CSS-in-JS App With Styled Components and Priceline Design System</a></li>\n<li><a href=\"https://www.kaymathew.com/posts/pt-6-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Part Six: Build a CSS-in-JS App With Styled Components and Priceline Design System</a></li>\n</ul>\n<h5 id=\"resources\" style=\"position:relative;\"><a href=\"#resources\" aria-label=\"resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resources</h5>\n<ul>\n<li><a href=\"https://lodash.com/docs#debounce\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Official Documentation on Debounce by Lodash</a></li>\n<li><a href=\"https://css-tricks.com/snippets/css/css-triangle/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSS Triangle snippet</a></li>\n<li><a href=\"https://www.nngroup.com/articles/minimize-cognitive-load/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Minimize Cognitive Load to Maximize Usability by Kathryn Whitenton</a></li>\n</ul>","fields":{"slug":"/posts/pt-7-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/","tagSlugs":["/tag/javascript/","/tag/react/"]},"frontmatter":{"date":"2018-07-01T23:46:37.121Z","description":"We will learn how to build a feature that progressively displays author information upon interaction. In the course of building this feature, we will learn techniques such as rate limiting using `debounce` and `lodash` and cache memoization to avoid memory leaks and improve performance.","tags":["Javascript","React"],"title":"Pt 7: Build a CSS-in-JS React App with Styled Components and Priceline Design System","socialImage":null}}},"pageContext":{"slug":"/posts/pt-7-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/"}},"staticQueryHashes":["251939775","401334301","4120999787"]}