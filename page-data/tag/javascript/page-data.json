{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/javascript","result":{"data":{"site":{"siteMetadata":{"title":"Kay Mathew Blog","subtitle":"The personal space of Kay"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/pt-7-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/","categorySlug":"/category/front-end/"},"frontmatter":{"title":"Pt 7: Build a CSS-in-JS React App with Styled Components and Priceline Design System","date":"2018-07-01T23:46:37.121Z","category":"Front End","description":"We will learn how to build a feature that progressively displays author information upon interaction. In the course of building this feature, we will learn techniques such as rate limiting using `debounce` and `lodash` and cache memoization to avoid memory leaks and improve performance."}}},{"node":{"fields":{"slug":"/posts/pt-6-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/","categorySlug":"/category/front-end/"},"frontmatter":{"title":"Pt 6: Build a CSS-in-JS React App with Styled Components and Priceline Design System","date":"2018-06-22T23:46:37.121Z","category":"Front End","description":"Last time around we explored the use of infinite scrolling techniques to improve perceived responsiveness. Today, we will explore skeletal content placeholder screens as a technique for improving perceived app response times. We will also look at action notifications as an effective feedback mechanism."}}},{"node":{"fields":{"slug":"/posts/pt-5-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/","categorySlug":"/category/front-end/"},"frontmatter":{"title":"Pt 5: Build a CSS-in-JS React App with Styled Components and Priceline Design System","date":"2018-06-14T23:46:37.121Z","category":"Front End","description":"Today, we'll explore a few techniques for improving perceived responsiveness for apps. We'll be looking at a few such techniques today (even though there are much more sophisticated and code intensive techniques out there). We'll use a technique that is employed by some of the most popular apps available today. Stay with us to find out more."}}},{"node":{"fields":{"slug":"/posts/pt-4-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/","categorySlug":"/category/front-end/"},"frontmatter":{"title":"Pt 4: Build a CSS-in-JS React App with Styled Components and Priceline Design System","date":"2018-06-06T23:46:37.121Z","category":"Front End","description":"Previously on this series, we learned more about state management in large applications and the benefits we could gain by adopting an architecture like Flux. We also add Redux application functionality to our FireLiners app complete with actions and Sagas.\nToday, we'll do just a little bit more. We'll be going in-depth into more state management practices and we'll setup dynamic data that we'll be using to populate our feed. Finally, we'll add functionality that allows us to persist our state to local storage."}}}]}},"pageContext":{"tag":"Javascript","currentPage":0,"postsLimit":4,"postsOffset":0,"prevPagePath":"/tag/javascript","nextPagePath":"/tag/javascript/page/1","hasPrevPage":false,"hasNextPage":true}},"staticQueryHashes":["251939775","401334301","4120999787"]}