{"componentChunkName":"component---src-templates-category-template-js","path":"/category/front-end","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/front-end/","slug":"/articles/improve-async-network-state-handling-with-custom-react-hooks"},"frontmatter":{"date":"2021-08-24T18:26:00.121Z","description":"In this article, I’ll cover the various states that network requests exist in and show you how to keep request management within custom Hooks. I’ll also walk you through building a small app that employs these Hooks.","category":"Front End","title":"Improve async network state handling with custom React Hooks"}}},{"node":{"fields":{"categorySlug":"/category/front-end/","slug":"/articles/build-a-react-multi-step-wizard-with-formik-and-react-query"},"frontmatter":{"date":"2021-03-24T10:07:00.121Z","description":"Multi step wizards are a solution allowing complex challenges to be broken down to a list of steps needed to accomplish a goal. Sometimes branching conditional logic is used to narrow the path to be taken by the user..","category":"Front End","title":"Build a React Multi step Wizard with Formik and React Query"}}},{"node":{"fields":{"categorySlug":"/category/front-end/","slug":"/articles/pt-7-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/"},"frontmatter":{"date":"2018-07-01T23:46:37.121Z","description":"We will learn how to build a feature that progressively displays author information upon interaction. In the course of building this feature, we will learn techniques such as rate limiting using `debounce` and `lodash` and cache memoization to avoid memory leaks and improve performance.","category":"Front End","title":"Pt 7: Build a CSS-in-JS React App with Styled Components and Priceline Design System"}}},{"node":{"fields":{"categorySlug":"/category/front-end/","slug":"/articles/pt-6-build-a-css-in-js-react-app-with-styled-components-and-priceline-design-system/"},"frontmatter":{"date":"2018-06-22T23:46:37.121Z","description":"Last time around we explored the use of infinite scrolling techniques to improve perceived responsiveness. Today, we will explore skeletal content placeholder screens as a technique for improving perceived app response times. We will also look at action notifications as an effective feedback mechanism.","category":"Front End","title":"Pt 6: Build a CSS-in-JS React App with Styled Components and Priceline Design System"}}}]}},"pageContext":{"category":"Front End","currentPage":0,"postsLimit":4,"postsOffset":0,"prevPagePath":"/category/front-end","nextPagePath":"/category/front-end/page/1","hasPrevPage":false,"hasNextPage":true}},"staticQueryHashes":["1250832817","251939775","401334301","697386449"]}